{
  "properties": {
    "textEditor.c#.advanced.analysis.dotnetAnalyzerDiagnosticsScope": {
      "title": "%textEditor.c#.advanced.analysis.dotnetAnalyzerDiagnosticsScope.title%",
      "type": "string",
      "enum": [ "None", "Current Document", "Open Documents", "Entire Solution" ],
      "enumLabel": [ "%textEditor.c#.advanced.analysis.none%", "%textEditor.c#.advanced.analysis.currentDocument%", "%textEditor.c#.advanced.analysis.OpenDocuments%", "%textEditor.c#.advanced.analysis.EntireSolution%" ],
      "default": "Current Document",
      "requiresRestart": false,
      "order": 0,
      "migration": {
        "enumIntegerToString": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.BackgroundAnalysisScopeOption"
          },
          "map": [
            {
              "result": "None",
              "match": 3
            },
            {
              "result": "Current Document",
              "match": 0
            },
            {
              "result": "Open Documents",
              "match": 1
            },
            {
              "result": "Entire Solution",
              "match": 2
            }
          ]
        }
      }
    },
    "textEditor.c#.advanced.analysis.dotnetCompilerDiagnosticsScope": {
      "title": "%textEditor.c#.advanced.analysis.dotnetCompilerDiagnosticsScope.title%",
      "type": "string",
      "enum": [ "None", "Current Document", "Open Documents", "Entire Solution" ],
      "enumLabel": [ "%textEditor.c#.advanced.analysis.none%", "%textEditor.c#.advanced.analysis.currentDocument%", "%textEditor.c#.advanced.analysis.OpenDocuments%", "%textEditor.c#.advanced.analysis.EntireSolution%" ],
      "default": "Open Documents",
      "requiresRestart": false,
      "order": 10,
      "migration": {
        "enumIntegerToString": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CompilerDiagnosticsScopeOption"
          },
          "map": [
            {
              "result": "None",
              "match": 0
            },
            {
              "result": "Current Document",
              "match": 1
            },
            {
              "result": "Open Documents",
              "match": 2
            },
            {
              "result": "Entire Solution",
              "match": 3
            }
          ]
        }
      }
    },
    "textEditor.c#.advanced.analysis.dotnetEnableInlineDiagnostics": {
      "title": "Display diagnostics inline (experimental)",
      "type": "boolean",
      "default": false,
      "requiresRestart": true,
      "order": 20,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.InlineDiagnostics"
          }
        }
      }
    },
    "textEditor.c#.advanced.analysis.dotnetInlineDiagnosticsLocation": {
      "title": "Display diagnostics inline (experimental)",
      "type": "string",
      "enum": [ "at the end of the line of code", "on the right edge of the editor window" ],
      "enumLabel": [ "at the end of the line of code", "on the right edge of the editor window" ],
      "default": "at the end of the line of code",
      "requiresRestart": false,
      "order": 30,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.InlineDiagnostics.LocationOption"
          }
        }
      }
    },
    "textEditor.c#.advanced.usingDirectives.dotnetSortSystemDirectivesFirst": {
      "title": "Place 'System' directives first when sorting usings",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 40,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.PlaceSystemNamespaceFirst"
          }
        }
      }
    },
    "textEditor.c#.advanced.usingDirectives.dotnetSeperateImportDirectiveGroups": {
      "title": "Separate using directive groups",
      "type": "boolean",
      "default": false,
      "requiresRestart": false,
      "order": 50,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.SeparateImportDirectiveGroups"
          }
        }
      }
    },
    "textEditor.c#.advanced.usingDirectives.dotnetSearchReferenceAssemblies": {
      "title": "Separate using directive groups",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 60,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.SuggestForTypesInReferenceAssemblies"
          }
        }
      }
    },
    "textEditor.c#.advanced.usingDirectives.dotnetSearchNugetPackages": {
      "title": "Suggest usings for types in NuGet packages",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 70,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.SuggestForTypesInNuGetPackages"
          }
        }
      }
    },
    "textEditor.c#.advanced.usingDirectives.dotnetAddImportsOnPaste": {
      "title": "Add missing using directives on paste",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 80,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.AddImportsOnPaste2"
          }
        }
      }
    },
    "textEditor.c#.advanced.highlighting.dotnetHighlightReferences": {
      "title": "Highlight references to symbol under cursor",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 90,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Reference Highlighting"
          }
        }
      }
    },
    "textEditor.c#.advanced.highlighting.dotnetHighlightKeywords": {
      "title": "Highlight related keywords under cursor",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 100,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Keyword Highlighting"
          }
        }
      }
    },
    "textEditor.c#.advanced.Outlining.dotnetEnterOutliningModeOnFileOpen": {
      "title": "Enter outlining mode when files open",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 110,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Outlining"
          }
        }
      }
    },
    "textEditor.c#.advanced.Outlining.dotnetCollapseRegionsWhenFirstOpened": {
      "title": "Collapse #regions on file open",
      "type": "boolean",
      "default": true,
      "requiresRestart": false,
      "order": 120,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseRegionsWhenFirstOpened"
          }
        }
      }
    },
    "textEditor.c#.advanced.Outlining.dotnetCollapseImportsWhenFirstOpened": {
      "title": "Collapse usings on file open",
      "type": "boolean",
      "default": false,
      "requiresRestart": false,
      "order": 130,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseImportsWhenFirstOpened"
          }
        }
      }
    },
    "textEditor.c#.advanced.Outlining.dotnetCollapseMetadataImplementationWhenFirstOpened": {
      "title": "Collapse Source Link, Embedded, and Decompiled source to definitions on file open",
      "type": "boolean",
      "default": false,
      "requiresRestart": false,
      "order": 130,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseImportsWhenFirstOpened"
          }
        }
      }
    },
    "textEditor.c#.advanced.Outlining.dotnetCollapseEmptyMetadataImplementationsWhenFirstOpen": {
      "title": "Collapse Source Link, Embedded, and Decompiled source to definitions on file open",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 140,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseEmptyMetadataImplementationsWhenFirstOpened"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetDisplayLineSeparators": {
      "title": "Show procedure line separators",
      "type": "boolean",
      "default": false,
      "requiresrestart": false,
      "order": 150,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Line Separator"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetShowOutliningForDeclarationLevelConstructs": {
      "title": "Show outlining for declaration level constructs",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 160,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.ShowOutliningForDeclarationLevelConstructs"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetShowOutliningForCodeLevelConstructs": {
      "title": "Show outlining for code level constructs",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 170,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.ShowOutliningForCodeLevelConstructs"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetShowOutliningForCommentsAndPreprocessorRegions": {
      "title": "Show outlining for comments and preprocessor regions",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 180,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.ShowOutliningForCommentsAndPreprocessorRegions"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetCollapseRegionsWhenCollapsingToDefinitions": {
      "title": "Collapse #regions when collapsing to definitions",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 190,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseRegionsWhenCollapsingToDefinitions"
          }
        }
      }
    },
    "textEditor.c#.advanced.outlining.dotnetCollapseLocalFunctionsWhenCollapsingToDefinitions": {
      "title": "Collapse local functions when collapsing to definitions",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 200,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.CollapseLocalFunctionsWhenCollapsingToDefinitions"
          }
        }
      }
    },
    "textEditor.c#.advanced.fading.dotnetFadeOutUnusedImports": {
      "title": "Fade out unused usings",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 210,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.FadeOutUnusedImports"
          }
        }
      }
    },
    "textEditor.c#.advanced.fading.dotnetFadeOutUnreachableCode": {
      "title": "Fade out unreachable code",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 220,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.FadeOutUnreachableCode"
          }
        }
      }
    },
    "textEditor.c#.advanced.blockStructureGuides.dotnetShowBlockStructureGuidesForDeclarationLevelConstructs": {
      "title": "Show guides for declaration level constructs",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 230,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.ShowBlockStructureGuidesForDeclarationLevelConstructs"
          }
        }
      }
    },
    "textEditor.c#.advanced.blockStructureGuides.dotnetShowBlockStructureGuidesForCodeLevelConstructs": {
      "title": "Show guies for code level constructs",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 240,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.ShowBlockStructureGuidesForCodeLevelConstructs"
          }
        }
      }
    },
    "textEditor.c#.advanced.comments.dotnetAutoXmlDocCommentGeneration": {
      "title": "Generate XML documentation comments for ///",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 250,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Automatic XML Doc Comment Generation"
          }
        }
      }
    },
    "textEditor.c#.advanced.comments.dotnetSplitComments": {
      "title": "Insert // at the start of new lines when writing // comments",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 260,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.SplitComments"
          }
        }
      }
    },
    "textEditor.c#.advanced.comments.csharpInsertBlockCommentStartString": {
      "title": "Insert * at the start of new lines when writing /**/ comments",
      "type": "boolean",
      "default": true,
      "requiresrestart": false,
      "order": 270,
      "migration": {
        "pass": {
          "input": {
            "store": "SettingsManager",
            "path": "TextEditor.CSharp.Specific.Auto Insert Block Comment Start String"
          }
        }
      }
    }
  },
  "textEditor.c#.advanced": {
      "title": "%textEditor.c#.advanced.title%",
      "helpUri": "%textEditor.c#.advanced.helpUri%",
      "legacyOptionPageId": "8FD0B177-B244-4A97-8E37-6FB7B27DE3AF"
  }
}