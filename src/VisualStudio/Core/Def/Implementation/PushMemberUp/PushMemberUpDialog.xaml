<vs:DialogWindow
             x:Uid="PushMemberUpDialog" 
             x:Class="Microsoft.VisualStudio.LanguageServices.Implementation.PushMemberUp.PushMemberUpDialogxaml"
             x:ClassModifier="internal"
             x:Name="dialog"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:self="clr-namespace:Microsoft.VisualStudio.LanguageServices.Implementation.PushMemberUp"
             mc:Ignorable="d" 
             SizeToContent="WidthAndHeight"
             Height="460"
             Width="490"
             Title="{Binding ElementName=dialog, Path=PushMembersUpTitle}">
    <Window.Resources>
        <Thickness x:Key="okAndCancelButton">5, 3, 8, 4</Thickness>
        <Thickness x:Key="selectDependantsButton">2, 4, 4, 2</Thickness>
        <sys:Double x:Key="okAndCancelButtonWidth">50</sys:Double>
        <sys:Double x:Key="okAndCancelButtonHeight">20</sys:Double>
        <Style x:Key="RoundCornerButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" BorderThickness="1" BorderBrush="Black">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LibraryTreeViewItemStyle"
               TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsSelected"
                        Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight"
                        Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="10,8,10,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Height="200" MinWidth="370">
            <Label
               x:Uid="SelectTargetLabel"
               x:Name="PushUpLabel"
               FontWeight="Bold"
               Content="Pull Up"/>
            <Label
                x:Uid="Description"
                x:Name="Description"
                Content="  Select destination and members to pull up"/>
            <Separator/>

            <Label x:Name="TargetSelectionLabel"
                   Content="Select destination type"/>

            <TreeView x:Uid="PushTargetTreeView"
                      x:Name="TargetMembersContainer"
                      MinHeight="110"
                      MinWidth="370"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                      ItemsSource="{Binding TargetMembersContainer}"
                      ItemContainerStyle="{StaticResource LibraryTreeViewItemStyle}"
                      SelectedItemChanged="TargetMembersContainer_SelectedItemChanged">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Neighbours}"
                                          DataType="{x:Type self:MemberSymbolViewModelGraphNode}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding MemberSymbolViewModel.Glyph}"/>
                            <TextBlock Text="{Binding MemberSymbolViewModel.MemberName}"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </StackPanel>

        <Label Grid.Row ="1" x:Uid="MemberSelectionLabel" Content="Select members:"/>
        <Grid Grid.Row="2" Margin="5,5,5,0" Height="135">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <DataGrid 
                Grid.Column="0"
                x:Uid="MemberSelectionListView"
                x:Name="MemberSelection"
                Margin="2"
                MinHeight="130"
                MinWidth="330"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                AutoGenerateColumns="False"
                GridLinesVisibility="None"
                ItemsSource="{Binding SelectedMembersContainer, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Member" MinWidth="220">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox x:Uid="MemberSelectionCheckBox"
                                              AutomationProperties.Name="{Binding MemberAutomationText}"
                                              IsChecked="{Binding IsChecked}"
                                              Width="Auto"
                                              Focusable="False"
                                              AutomationProperties.AutomationId="{Binding MemberName}"/>
                                    <Image x:Uid="GlyphOfMember"
                                           Margin="8,0,0,0"
                                           Source="{Binding Glyph}"/>
                                    <TextBlock x:Uid="MemberName"
                                               Text="{Binding MemberName}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Make Abstract" MinWidth="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="MakeMemberAbstract"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Column="1"
                        Orientation="Vertical"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        MinWidth="100">
                    <Button
                    x:Name="SelecDependantsButton"
                    Margin="{StaticResource ResourceKey=selectDependantsButton}"
                    Style="{StaticResource RoundCornerButton}" 
                    Content="Select dependants"
                    MinHeight="20"
                    MaxWidth="120"/>
                <Button
                    x:Name="SelectAllButton"
                    Content="Select all"
                    Style="{StaticResource RoundCornerButton}" 
                    Margin="{StaticResource ResourceKey=selectDependantsButton}"
                    MinHeight="20"
                    MaxWidth="120"/>
                <Button
                    x:Name="SelectPublic"
                    Content="Select public"
                    Style="{StaticResource RoundCornerButton}" 
                    Margin="{StaticResource ResourceKey=selectDependantsButton}"/>
            </StackPanel>
        </Grid>

        <StackPanel Grid.Row="3"
                   Orientation="Vertical"
                   MaxHeight="40" Margin="0,8,0,8" MinWidth="445">
            <Separator/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Uid="OKButton"
                    Grid.Column="1"
                    Click="OK_Button_Click"
                    Style="{StaticResource RoundCornerButton}" 
                    Margin = "{StaticResource ResourceKey=okAndCancelButton}"
                    Content="{Binding ElementName=dialog, Path=OK}"
                    Width= "{StaticResource ResourceKey=okAndCancelButtonWidth}"
                    Height="{StaticResource ResourceKey=okAndCancelButtonHeight}"/>
                <Button x:Uid="CancelButton"
                    Grid.Column="2"
                    Click="Cancel_Button_Click"
                    Style="{StaticResource RoundCornerButton}" 
                    Margin= "{StaticResource ResourceKey=okAndCancelButton}"
                    Content="{Binding Cancel, ElementName=dialog}"
                    Width= "{StaticResource ResourceKey=okAndCancelButtonWidth}"
                    Height="{StaticResource ResourceKey=okAndCancelButtonHeight}"/>
            </Grid>
            </StackPanel>
    </Grid>
</vs:DialogWindow>